% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_bounds.R
\name{get_bounds}
\alias{get_bounds}
\title{Get geoboundaries in a dataframe from zipped geoboundaries with a code and level.}
\usage{
get_bounds(
  code = "AUS",
  level = "ADM0",
  simplified = TRUE,
  srctype = "shp",
  quiet = TRUE,
  data = TRUE,
  what = ""
)
}
\arguments{
\item{code}{3-letter code}

\item{level}{administrative level (of detail, e.g. "ADM1")}

\item{simplified}{return the simplified layer for the level, \code{FALSE} is default}

\item{srctype}{'shp' by default, but on advisement (use 'geojson' or 'topojson' for alternative)}

\item{quiet}{simple debug messages are printed if this is \code{TRUE}}

\item{data}{return the data, or just the source and layer name, default is \code{TRUE}}

\item{what}{read "fields" or "geometry" or "" (both)}
}
\value{
data frame with fields and geometry (see \link[wk:wkb]{wk::wkb})
}
\description{
Currently hardcoded to gbOpen, see https://github.com/wmgeolab/geoBoundaries/tree/main/releaseData/gbOpen
}
\details{
There's no caching done, but the function get_bounds is memoized.
See examples for available codes.
}
\examples{
get_bounds("EGY", simplified = TRUE)

## get a table of codes and levels
b <- "https://github.com/wmgeolab/geoBoundaries/raw/main/releaseData"
codes <- readr::read_csv(file.path(b, "geoBoundariesOpen-meta.csv"))
subset(codes, boundaryISO == "SWE", select = c("boundaryISO", "boundaryName", "boundaryType"))
}
